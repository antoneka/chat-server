version: '3'

volumes:
  postgres_volume:

services:
  pg:
    image: postgres:16.1-alpine3.19
    environment:
      - "POSTGRES_USER=${PG_USER}"
      - "POSTGRES_PASSWORD=${PG_PASSWORD}"
    ports:
      - "${PG_PORT}:${PG_CONTAINER_PORT}"
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${PG_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 3

  migrator:
    image: ${REGISTRY}/${MIGRATOR_IMAGE_NAME}:${TAG_NAME}
    build:
      context: .
      dockerfile: migration.Dockerfile
    depends_on:
      pg:
        condition: service_healthy
    environment:
      DB_HOST: pg

  server:
    image: ${REGISTRY}/${SERVER_IMAGE_NAME}:${TAG_NAME}
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${SERVER_CONTAINER_NAME}
    ports:
      - "${GRPC_PORT}:${GRPC_CONTAINER_PORT}"
    depends_on:
      pg:
        condition: service_healthy
